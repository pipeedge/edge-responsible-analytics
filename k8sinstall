sudo apt-get update
# apt-transport-https may be a dummy package; if so, you can skip that package
sudo apt-get install -y apt-transport-https ca-certificates curl gpg

# If the directory `/etc/apt/keyrings` does not exist, it should be created before the curl command, read the note below.
# sudo mkdir -p -m 755 /etc/apt/keyrings
curl -fsSL https://pkgs.k8s.io/core:/stable:/v1.31/deb/Release.key | sudo gpg --dearmor -o /etc/apt/keyrings/kubernetes-apt-keyring.gpg

# This overwrites any existing configuration in /etc/apt/sources.list.d/kubernetes.list
echo 'deb [signed-by=/etc/apt/keyrings/kubernetes-apt-keyring.gpg] https://pkgs.k8s.io/core:/stable:/v1.31/deb/ /' | sudo tee /etc/apt/sources.list.d/kubernetes.list

sudo apt-get update
sudo apt-get install -y kubelet kubeadm kubectl
sudo apt-mark hold kubelet kubeadm kubectl

sudo systemctl enable --now kubelet


sudo kubeadm join 10.200.3.99:6443 --token g1fimn.u2md2hqugpm0wi9i \
	--discovery-token-ca-cert-hash sha256:bb4733e9f79b3186042e7e0835cee4ea61ec2667e078447b0727bc4152adb146



kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml


kubectl apply -f k8s/deployments/opa-deployment.yaml
kubectl apply -f k8s/services/opa-service.yaml
kubectl apply -f k8s/deployments/edge_processing_deployment.yaml
kubectl apply -f k8s/services/edge_processing_service.yaml
kubectl apply -f k8s/deployments/edge_device_deployment.yaml
kubectl apply -f k8s/services/edge_device_service.yaml
kubectl apply -f k8s/configmaps/opa-reliability-policies.yaml
kubectl apply -f k8s/configmaps/opa-fairness-policies.yaml