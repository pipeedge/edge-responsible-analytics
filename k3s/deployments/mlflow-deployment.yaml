apiVersion: apps/v1
kind: Deployment
metadata:
  name: mlflow
  labels:
    app: mlflow
spec:
  replicas: 3
  selector:
    matchLabels:
      app: mlflow
  template:
    metadata:
      labels:
        app: mlflow
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                - liang-local-server-1
                - liang-local-server-2
                - liang-cloud-server
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - mlflow
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: mlflow
        image: ghcr.io/mlflow/mlflow:v2.19.0
        command: ["mlflow", "server"]
        args: [
          "--host", "0.0.0.0",
          "--port", "5002",
          "--backend-store-uri", "$(BACKEND_STORE_URI)",
          "--default-artifact-root", "$(DEFAULT_ARTIFACT_ROOT)"
        ]
        ports:
        - containerPort: 5002
        env:
        - name: BACKEND_STORE_URI
          value: "sqlite:///mlflow.db"  # Adjust based on your database setup
        - name: DEFAULT_ARTIFACT_ROOT
          value: "/mlruns"
        volumeMounts:
        - name: mlflow-data
          mountPath: /mlruns
      volumes:
      - name: mlflow-data
        persistentVolumeClaim:
          claimName: mlflow-pvc